{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport './Input.scss';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../utils/utils';\n\nvar Input = function Input(_ref) {\n  var className = _ref.className,\n      name = _ref.name,\n      value = _ref.value,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      placeholder = _ref.placeholder,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      props = _objectWithoutProperties(_ref, [\"className\", \"name\", \"value\", \"type\", \"placeholder\", \"onChange\", \"onBlur\"]);\n\n  return /*#__PURE__*/React.createElement(\"input\", _extends({}, classNames('c-input', className), props, {\n    name: name,\n    type: type,\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    onBlur: onBlur\n  }));\n};\n\nInput.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  type: PropTypes.oneOf(['date', 'text', 'number'])\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}