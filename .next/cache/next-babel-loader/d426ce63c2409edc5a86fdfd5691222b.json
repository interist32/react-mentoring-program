{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Movie } from '../../propTypes';\n\nvar Card = function Card(_ref) {\n  _s2();\n\n  var movie = _ref.movie,\n      onMovieEditClick = _ref.onMovieEditClick,\n      onMovieDeleteClick = _ref.onMovieDeleteClick;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      optionsOpen = _useState2[0],\n      setOptionsOpen = _useState2[1];\n\n  var id = movie.id,\n      posterPath = movie.posterPath,\n      title = movie.title,\n      genres = movie.genres,\n      releaseDate = movie.releaseDate;\n\n  var handleEditOptionsButtonClick = function handleEditOptionsButtonClick(event) {\n    event.stopPropagation();\n    setOptionsOpen(true);\n  };\n\n  var editOptionsButton = /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleEditOptionsButtonClick,\n    className: \"c-movie-card__options-button\"\n  }, /*#__PURE__*/React.createElement(\"button\", null, \"\\xB7\\xB7\\xB7\"));\n\n  var handleOptionsClick = function handleOptionsClick(event, option) {\n    event.stopPropagation();\n    setOptionsOpen(false);\n\n    switch (option) {\n      case 'edit':\n        onMovieEditClick(movie.id);\n        break;\n\n      case 'delete':\n        onMovieDeleteClick(movie.id);\n        break;\n\n      default:\n        throw new Error('Not supported type');\n    }\n  };\n\n  var editOptionsList = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card-options\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return setOptionsOpen(false);\n    },\n    className: \"c-movie-card-options__cross\"\n  }, \"\\u2716\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"c-movie-card-options-list\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: function onClick(event) {\n      return handleOptionsClick(event, 'edit');\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: function onClick(event) {\n      return handleOptionsClick(event, 'delete');\n    }\n  }, \"Delete\")));\n  var editOptions = optionsOpen ? editOptionsList : editOptionsButton;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card\"\n  }, editOptions, /*#__PURE__*/React.createElement(\"img\", {\n    src: posterPath,\n    className: \"c-movie-card__image\",\n    alt: title\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card-details\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card-details__title\"\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card-details__release\"\n  }, releaseDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-movie-card__genre\"\n  }, genres.join(', ')));\n};\n\n_s2(Card, \"yHXnESpa2svEdMmJo9QnrRdVYTo=\");\n\n_c = Card;\nCard.propTypes = {\n  movie: Movie.isRequired,\n  onMovieEditClick: PropTypes.func.isRequired,\n  onMovieDeleteClick: PropTypes.func.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/components/MovieCard/MovieCard.jsx"],"names":["React","useState","PropTypes","Movie","Card","movie","onMovieEditClick","onMovieDeleteClick","optionsOpen","setOptionsOpen","id","posterPath","title","genres","releaseDate","handleEditOptionsButtonClick","event","stopPropagation","editOptionsButton","handleOptionsClick","option","Error","editOptionsList","editOptions","join","propTypes","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Movie } from '../../propTypes';\r\n\r\n\r\nconst Card = ({\r\n    movie,\r\n    onMovieEditClick,\r\n    onMovieDeleteClick,\r\n}) => {\r\n    const [optionsOpen, setOptionsOpen] = useState(false);\r\n    const { id, posterPath, title, genres, releaseDate } = movie;\r\n\r\n    const handleEditOptionsButtonClick = (event) => {\r\n        event.stopPropagation();\r\n        setOptionsOpen(true);\r\n    };\r\n\r\n    const editOptionsButton = (\r\n        <div onClick={handleEditOptionsButtonClick} className=\"c-movie-card__options-button\">\r\n            <button>&middot;&middot;&middot;</button>\r\n        </div>\r\n    );\r\n\r\n    const handleOptionsClick = (event, option) => {\r\n        event.stopPropagation();\r\n        setOptionsOpen(false);\r\n\r\n        switch (option) {\r\n            case 'edit':\r\n                onMovieEditClick(movie.id);\r\n                break;\r\n            case 'delete':\r\n                onMovieDeleteClick(movie.id);\r\n                break;\r\n            default:\r\n                throw new Error('Not supported type');\r\n        }\r\n    };\r\n\r\n    const editOptionsList = (\r\n        <div className=\"c-movie-card-options\">\r\n            <div onClick={() => setOptionsOpen(false)} className=\"c-movie-card-options__cross\">âœ–</div>\r\n            <ul className=\"c-movie-card-options-list\">\r\n                <li onClick={(event) => handleOptionsClick(event, 'edit')}>Edit</li>\r\n                <li onClick={(event) => handleOptionsClick(event, 'delete')}>Delete</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    const editOptions = (\r\n        optionsOpen ? editOptionsList : editOptionsButton\r\n    );\r\n\r\n    return (\r\n        <div className=\"c-movie-card\">\r\n            {editOptions}\r\n            <img src={posterPath} className=\"c-movie-card__image\" alt={title} />\r\n            <div className=\"c-movie-card-details\">\r\n                <div className=\"c-movie-card-details__title\">{title}</div>\r\n                <div className=\"c-movie-card-details__release\">{releaseDate}</div>\r\n            </div>\r\n            <div className=\"c-movie-card__genre\">{genres.join(', ')}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCard.propTypes = {\r\n    movie: Movie.isRequired,\r\n    onMovieEditClick: PropTypes.func.isRequired,\r\n    onMovieDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}