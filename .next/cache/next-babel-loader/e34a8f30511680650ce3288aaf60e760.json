{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../utils/utils';\n\nvar Input = function Input(_ref) {\n  var className = _ref.className,\n      name = _ref.name,\n      value = _ref.value,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      placeholder = _ref.placeholder,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      props = _objectWithoutProperties(_ref, [\"className\", \"name\", \"value\", \"type\", \"placeholder\", \"onChange\", \"onBlur\"]);\n\n  return /*#__PURE__*/React.createElement(\"input\", _extends({}, classNames('c-input', className), props, {\n    name: name,\n    type: type,\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    onBlur: onBlur\n  }));\n};\n\n_c = Input;\nInput.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  type: PropTypes.oneOf(['date', 'text', 'number'])\n};\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/components/Input/Input.jsx"],"names":["React","PropTypes","classNames","Input","className","name","value","type","placeholder","onChange","onBlur","props","propTypes","oneOfType","string","number","isRequired","func","oneOf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MACVC,SADU,QACVA,SADU;AAAA,MAEVC,IAFU,QAEVA,IAFU;AAAA,MAGVC,KAHU,QAGVA,KAHU;AAAA,uBAIVC,IAJU;AAAA,MAIVA,IAJU,0BAIH,MAJG;AAAA,MAKVC,WALU,QAKVA,WALU;AAAA,MAMVC,QANU,QAMVA,QANU;AAAA,MAOVC,MAPU,QAOVA,MAPU;AAAA,MAQPC,KARO;;AAAA,sBAUN,0CAAWT,UAAU,CACjB,SADiB,EAEjBE,SAFiB,CAArB,EAIQO,KAJR;AAKI,IAAA,IAAI,EAAEN,IALV;AAMI,IAAA,IAAI,EAAEE,IANV;AAOI,IAAA,KAAK,EAAED,KAPX;AAQI,IAAA,WAAW,EAAEE,WARjB;AASI,IAAA,QAAQ,EAAEC,QATd;AAUI,IAAA,MAAM,EAAEC;AAVZ,KAVM;AAAA,CAAd;;KAAMP,K;AAwBNA,KAAK,CAACS,SAAN,GAAkB;AACdN,EAAAA,KAAK,EAAEL,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,MAAX,EAAmBb,SAAS,CAACc,MAA7B,CAApB,CADO;AAEdV,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBE,UAFT;AAGdR,EAAAA,WAAW,EAAEP,SAAS,CAACa,MAHT;AAIdL,EAAAA,QAAQ,EAAER,SAAS,CAACgB,IAJN;AAKdP,EAAAA,MAAM,EAAET,SAAS,CAACgB,IALJ;AAMdV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAAhB;AANQ,CAAlB;AASA,eAAef,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { classNames } from '../../utils/utils';\r\n\r\n\r\nconst Input = ({\r\n    className,\r\n    name,\r\n    value,\r\n    type = 'text',\r\n    placeholder,\r\n    onChange,\r\n    onBlur,\r\n    ...props\r\n}) => (\r\n        <input {...classNames(\r\n            'c-input',\r\n            className,\r\n        )}\r\n            {...props}\r\n            name={name}\r\n            type={type}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n        />\r\n    );\r\n\r\nInput.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    type: PropTypes.oneOf(['date', 'text', 'number']),\r\n};\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}