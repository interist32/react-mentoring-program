{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { createSelector } from 'reselect';\n\nvar moviesState = function moviesState(state) {\n  return state.movies;\n};\n\nvar allMovies = createSelector(moviesState, function (state) {\n  return state.movies;\n});\nexport var isLoading = createSelector(moviesState, function (state) {\n  return state.isLoading;\n});\nexport var error = createSelector(moviesState, function (state) {\n  return state.error;\n});\nexport var genres = createSelector(allMovies, function (movies) {\n  var set = new Set();\n\n  var _iterator = _createForOfIteratorHelper(movies),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var movie = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(movie.genres),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var genre = _step2.value;\n          set.add(genre);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return _toConsumableArray(set);\n});\n\nvar selectedMovieId = function selectedMovieId(state, movieId) {\n  return movieId;\n};\n\nexport var selectedMovie = createSelector(allMovies, selectedMovieId, function (allMovies, selectedMovieId) {\n  if (!selectedMovieId) return null;\n  return allMovies.find(function (movie) {\n    return movie.id == selectedMovieId;\n  });\n});\nexport var filterByGenre = createSelector(moviesState, function (state) {\n  return state.filterByGenre;\n});\nexport var sortBy = createSelector(moviesState, function (state) {\n  return state.sortBy;\n});\nexport var filteredMovies = createSelector(allMovies, filterByGenre, sortBy, function (allMovies, filterByGenre, sortBy) {\n  var sortPredicate = getSortPredicate(sortBy);\n  return (!filterByGenre ? allMovies : allMovies.filter(function (movie) {\n    return movie.genres.includes(filterByGenre);\n  })).sort(sortPredicate).slice();\n});\n\nfunction getSortPredicate(sortBy) {\n  if (sortBy === 'rating') {\n    return function (a, b) {\n      return a.voteAverage - b.voteAverage;\n    };\n  }\n\n  if (sortBy === 'release date') {\n    return function (a, b) {\n      return new Date(a.releaseDate).getTime() - new Date(b.releaseDate).getTime();\n    };\n  }\n\n  return function (a, b) {\n    return a.genres[0].localeCompare(b.genres[0]);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}