{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport './LinkTabs.scss';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../utils/utils';\n\nvar LinkTabs = function LinkTabs(_ref) {\n  var tabs = _ref.tabs,\n      selectedText = _ref.selectedText,\n      _onSelect = _ref.onSelect;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"c-link-tabs\"\n  }, /*#__PURE__*/React.createElement(LinkTab, {\n    key: 'All',\n    text: 'All',\n    selected: selectedText === null,\n    onSelect: function onSelect() {\n      return _onSelect(null);\n    }\n  }), tabs.map(function (tab) {\n    return /*#__PURE__*/React.createElement(LinkTab, {\n      key: tab,\n      text: tab,\n      selected: tab === selectedText,\n      onSelect: _onSelect\n    });\n  }));\n};\n\n_c = LinkTabs;\nLinkTabs.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string),\n  onSelect: PropTypes.func.isRequired,\n  selectedText: PropTypes.string\n};\n\nvar LinkTab = function LinkTab(_ref2) {\n  var text = _ref2.text,\n      selected = _ref2.selected,\n      onSelect = _ref2.onSelect;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"c-link-tabs__item\"\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, classNames(\"c-link-tabs__link\", selected ? \"c-link-tabs__link--selected\" : ''), {\n    onClick: function onClick() {\n      return onSelect(text);\n    }\n  }), text));\n};\n\n_c2 = LinkTab;\nLinkTab.propTypes = {\n  text: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.bool\n};\nexport default LinkTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkTabs\");\n$RefreshReg$(_c2, \"LinkTab\");","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/components/LinkTabs/LinkTabs.jsx"],"names":["React","PropTypes","classNames","LinkTabs","tabs","selectedText","onSelect","map","tab","propTypes","arrayOf","string","func","isRequired","LinkTab","text","selected","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,SAAe,QAAfA,QAAe;AACnD,sBACI;AAAI,IAAA,SAAS,EAAC;AAAd,kBACI,oBAAC,OAAD;AACI,IAAA,GAAG,EAAE,KADT;AAEI,IAAA,IAAI,EAAE,KAFV;AAGI,IAAA,QAAQ,EAAED,YAAY,KAAK,IAH/B;AAII,IAAA,QAAQ,EAAE;AAAA,aAAMC,SAAQ,CAAC,IAAD,CAAd;AAAA;AAJd,IADJ,EAQQF,IAAI,CAACG,GAAL,CAAS,UAACC,GAAD;AAAA,wBACL,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,IAAI,EAAEA,GAFV;AAGI,MAAA,QAAQ,EAAEA,GAAG,KAAKH,YAHtB;AAII,MAAA,QAAQ,EAAEC;AAJd,MADK;AAAA,GAAT,CARR,CADJ;AAoBH,CArBD;;KAAMH,Q;AAuBNA,QAAQ,CAACM,SAAT,GAAqB;AACjBL,EAAAA,IAAI,EAAEH,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,MAA5B,CADW;AAEjBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,IAAV,CAAeC,UAFR;AAGjBR,EAAAA,YAAY,EAAEJ,SAAS,CAACU;AAHP,CAArB;;AAOA,IAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,MAASC,QAAT,SAASA,QAAT;AAAA,MAAmBV,QAAnB,SAAmBA,QAAnB;AAAA,sBACZ;AAAI,IAAA,SAAS,EAAC;AAAd,kBACI,yCAAUJ,UAAU,CAChB,mBADgB,EAEhBc,QAAQ,GAAG,6BAAH,GAAmC,EAF3B,CAApB;AAII,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAQ,CAACS,IAAD,CAAd;AAAA;AAJb,MAIoCA,IAJpC,CADJ,CADY;AAAA,CAAhB;;MAAMD,O;AAUNA,OAAO,CAACL,SAAR,GAAoB;AAChBM,EAAAA,IAAI,EAAEd,SAAS,CAACU,MAAV,CAAiBE,UADP;AAEhBP,EAAAA,QAAQ,EAAEL,SAAS,CAACW,IAAV,CAAeC,UAFT;AAGhBG,EAAAA,QAAQ,EAAEf,SAAS,CAACgB;AAHJ,CAApB;AAMA,eAAed,QAAf","sourcesContent":["import React from 'react';\r\n\r\nimport './LinkTabs.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../../utils/utils';\r\n\r\n\r\nconst LinkTabs = ({ tabs, selectedText, onSelect }) => {\r\n    return (\r\n        <ul className=\"c-link-tabs\">\r\n            <LinkTab\r\n                key={'All'}\r\n                text={'All'}\r\n                selected={selectedText === null}\r\n                onSelect={() => onSelect(null)}\r\n            />\r\n            {\r\n                tabs.map((tab) => (\r\n                    <LinkTab\r\n                        key={tab}\r\n                        text={tab}\r\n                        selected={tab === selectedText}\r\n                        onSelect={onSelect}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nLinkTabs.propTypes = {\r\n    tabs: PropTypes.arrayOf(PropTypes.string),\r\n    onSelect: PropTypes.func.isRequired,\r\n    selectedText: PropTypes.string,\r\n};\r\n\r\n\r\nconst LinkTab = ({ text, selected, onSelect }) => (\r\n    <li className=\"c-link-tabs__item\">\r\n        <span {...classNames(\r\n            \"c-link-tabs__link\",\r\n            selected ? \"c-link-tabs__link--selected\" : '',\r\n        )}\r\n            onClick={() => onSelect(text)}>{text}</span>\r\n    </li >\r\n);\r\n\r\nLinkTab.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    selected: PropTypes.bool,\r\n};\r\n\r\nexport default LinkTabs;"]},"metadata":{},"sourceType":"module"}