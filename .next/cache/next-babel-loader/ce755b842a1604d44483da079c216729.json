{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport * as moviesActions from '../../store/actions/movies';\nimport * as moviesSelectors from '../../store/selectors/movies';\nimport LinkTabs from '../../components/LinkTabs/LinkTabs';\nimport './FilterOptions.scss';\n\nvar FilterOptions = function FilterOptions(_ref) {\n  var genres = _ref.genres,\n      filterByGenre = _ref.filterByGenre,\n      dispatchSetFilterByGenre = _ref.dispatchSetFilterByGenre,\n      sortBy = _ref.sortBy,\n      dispatchSetSorting = _ref.dispatchSetSorting;\n\n  var handleOnSelectTab = function handleOnSelectTab(genre) {\n    dispatchSetFilterByGenre(genre);\n  };\n\n  var handleOnChange = function handleOnChange(e) {\n    dispatchSetSorting(e.target.value);\n  };\n\n  var options = ['Genre', 'Rating', 'Release date'].map(function (sortingType) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: sortingType,\n      value: sortingType.toLowerCase()\n    }, sortingType);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-filter-options\"\n  }, /*#__PURE__*/React.createElement(LinkTabs, {\n    tabs: genres,\n    selectedText: filterByGenre,\n    onSelect: handleOnSelectTab\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-sorting\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"home-sorting__title\"\n  }, \"SORT BY\", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleOnChange,\n    value: sortBy || '',\n    className: \"home-sorting__select\"\n  }, options))));\n};\n\n_c = FilterOptions;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    genres: moviesSelectors.genres(state),\n    filterByGenre: moviesSelectors.filterByGenre(state),\n    sortBy: moviesSelectors.sortBy(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  dispatchSetFilterByGenre: moviesActions.setFilterByGenre,\n  dispatchSetSorting: moviesActions.setSorting\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterOptions\");","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/containers/Home/FilterOptions.jsx"],"names":["React","connect","moviesActions","moviesSelectors","LinkTabs","FilterOptions","genres","filterByGenre","dispatchSetFilterByGenre","sortBy","dispatchSetSorting","handleOnSelectTab","genre","handleOnChange","e","target","value","options","map","sortingType","toLowerCase","mapStateToProps","state","mapDispatchToProps","setFilterByGenre","setSorting"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AAEA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,OAAO,sBAAP;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAMhB;AAAA,MALFC,MAKE,QALFA,MAKE;AAAA,MAJFC,aAIE,QAJFA,aAIE;AAAA,MAHFC,wBAGE,QAHFA,wBAGE;AAAA,MAFFC,MAEE,QAFFA,MAEE;AAAA,MADFC,kBACE,QADFA,kBACE;;AACF,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjCJ,IAAAA,wBAAwB,CAACI,KAAD,CAAxB;AACH,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC1BJ,IAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACH,GAFD;;AAIA,MAAMC,OAAO,GAAG,CACZ,OADY,EAEZ,QAFY,EAGZ,cAHY,EAIdC,GAJc,CAIV,UAACC,WAAD;AAAA,wBACF;AACI,MAAA,GAAG,EAAEA,WADT;AAEI,MAAA,KAAK,EAAEA,WAAW,CAACC,WAAZ;AAFX,OAEuCD,WAFvC,CADE;AAAA,GAJU,CAAhB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEb,MADV;AAEI,IAAA,YAAY,EAAEC,aAFlB;AAGI,IAAA,QAAQ,EAAEI;AAHd,IADJ,eAOI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAO,IAAA,SAAS,EAAC;AAAjB,6BAEI;AACI,IAAA,QAAQ,EAAEE,cADd;AAEI,IAAA,KAAK,EAAEJ,MAAM,IAAI,EAFrB;AAGI,IAAA,SAAS,EAAC;AAHd,KAIKQ,OAJL,CAFJ,CADJ,CAPJ,CADJ;AAqBH,CA9CD;;KAAMZ,a;;AAgDN,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHhB,IAAAA,MAAM,EAAEH,eAAe,CAACG,MAAhB,CAAuBgB,KAAvB,CADL;AAEHf,IAAAA,aAAa,EAAEJ,eAAe,CAACI,aAAhB,CAA8Be,KAA9B,CAFZ;AAGHb,IAAAA,MAAM,EAAEN,eAAe,CAACM,MAAhB,CAAuBa,KAAvB;AAHL,GAAP;AAKH,CAND;;AAQA,IAAMC,kBAAkB,GAAG;AACvBf,EAAAA,wBAAwB,EAAEN,aAAa,CAACsB,gBADjB;AAEvBd,EAAAA,kBAAkB,EAAER,aAAa,CAACuB;AAFX,CAA3B;AAKA,eAAexB,OAAO,CAClBoB,eADkB,EAElBE,kBAFkB,CAAP,CAGblB,aAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as moviesActions from '../../store/actions/movies';\r\nimport * as moviesSelectors from '../../store/selectors/movies';\r\n\r\nimport LinkTabs from '../../components/LinkTabs/LinkTabs';\r\n\r\nimport './FilterOptions.scss';\r\n\r\n\r\nconst FilterOptions = ({\r\n    genres,\r\n    filterByGenre,\r\n    dispatchSetFilterByGenre,\r\n    sortBy,\r\n    dispatchSetSorting,\r\n}) => {\r\n    const handleOnSelectTab = (genre) => {\r\n        dispatchSetFilterByGenre(genre);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        dispatchSetSorting(e.target.value);\r\n    };\r\n\r\n    const options = [\r\n        'Genre',\r\n        'Rating',\r\n        'Release date',\r\n    ].map((sortingType) => (\r\n        <option\r\n            key={sortingType}\r\n            value={sortingType.toLowerCase()}>{sortingType}</option>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"home-filter-options\">\r\n            <LinkTabs\r\n                tabs={genres}\r\n                selectedText={filterByGenre}\r\n                onSelect={handleOnSelectTab}\r\n            />\r\n\r\n            <div className=\"home-sorting\">\r\n                <label className=\"home-sorting__title\">\r\n                    SORT BY\r\n                    <select\r\n                        onChange={handleOnChange}\r\n                        value={sortBy || ''}\r\n                        className=\"home-sorting__select\">\r\n                        {options}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        genres: moviesSelectors.genres(state),\r\n        filterByGenre: moviesSelectors.filterByGenre(state),\r\n        sortBy: moviesSelectors.sortBy(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchSetFilterByGenre: moviesActions.setFilterByGenre,\r\n    dispatchSetSorting: moviesActions.setSorting,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(FilterOptions);"]},"metadata":{},"sourceType":"module"}