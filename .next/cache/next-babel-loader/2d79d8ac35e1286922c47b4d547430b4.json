{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button/Button';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as moviesActions from '../../store/actions/movies';\nimport './SearchForm.scss';\nimport Input from '../../components/Input/Input';\n\nvar SearchForm = function SearchForm(_ref) {\n  var dispatchGetMovies = _ref.dispatchGetMovies;\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      searchQuery = _useParams.searchQuery;\n\n  var _useState = useState(searchQuery || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  useEffect(function () {\n    dispatchGetMovies(searchQuery);\n  }, [searchQuery]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    query && history.push(\"/search/\".concat(query));\n  };\n\n  var handleChange = function handleChange(e) {\n    setQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"home-search-form\",\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"search\",\n    className: \"home-search-form__input\",\n    placeholder: \"What do you want to watch?\",\n    onChange: handleChange,\n    value: query\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    colorType: \"primary\",\n    className: \"home-search-form__button\"\n  }, \"SEARCH\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = {\n  dispatchGetMovies: moviesActions.getMovies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);","map":null,"metadata":{},"sourceType":"module"}