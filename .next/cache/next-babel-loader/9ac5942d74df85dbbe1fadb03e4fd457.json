{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { createSelector } from 'reselect';\n\nvar moviesState = function moviesState(state) {\n  return state.movies;\n};\n\nvar allMovies = createSelector(moviesState, function (state) {\n  return state.movies;\n});\nexport var isLoading = createSelector(moviesState, function (state) {\n  return state.isLoading;\n});\nexport var error = createSelector(moviesState, function (state) {\n  return state.error;\n});\nexport var genres = createSelector(allMovies, function (movies) {\n  var set = new Set();\n\n  var _iterator = _createForOfIteratorHelper(movies),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var movie = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(movie.genres),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var genre = _step2.value;\n          set.add(genre);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return _toConsumableArray(set);\n});\n\nvar selectedMovieId = function selectedMovieId(state, movieId) {\n  return movieId;\n};\n\nexport var selectedMovie = createSelector(allMovies, selectedMovieId, function (allMovies, selectedMovieId) {\n  if (!selectedMovieId) return null;\n  return allMovies.find(function (movie) {\n    return movie.id == selectedMovieId;\n  });\n});\nexport var filterByGenre = createSelector(moviesState, function (state) {\n  return state.filterByGenre;\n});\nexport var sortBy = createSelector(moviesState, function (state) {\n  return state.sortBy;\n});\nexport var filteredMovies = createSelector(allMovies, filterByGenre, sortBy, function (allMovies, filterByGenre, sortBy) {\n  var sortPredicate = getSortPredicate(sortBy);\n  return (!filterByGenre ? allMovies : allMovies.filter(function (movie) {\n    return movie.genres.includes(filterByGenre);\n  })).sort(sortPredicate).slice();\n});\n\nfunction getSortPredicate(sortBy) {\n  if (sortBy === 'rating') {\n    return function (a, b) {\n      return a.voteAverage - b.voteAverage;\n    };\n  }\n\n  if (sortBy === 'release date') {\n    return function (a, b) {\n      return new Date(a.releaseDate).getTime() - new Date(b.releaseDate).getTime();\n    };\n  }\n\n  return function (a, b) {\n    return a.genres[0].localeCompare(b.genres[0]);\n  };\n}","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/store/selectors/movies.js"],"names":["createSelector","moviesState","state","movies","allMovies","isLoading","error","genres","set","Set","movie","genre","add","selectedMovieId","movieId","selectedMovie","find","id","filterByGenre","sortBy","filteredMovies","sortPredicate","getSortPredicate","filter","includes","sort","slice","a","b","voteAverage","Date","releaseDate","getTime","localeCompare"],"mappings":"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","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\n\r\nconst moviesState = state => state.movies;\r\n\r\nconst allMovies = createSelector(moviesState, (state) => state.movies);\r\n\r\nexport const isLoading =\r\n    createSelector(moviesState, (state) => state.isLoading);\r\n\r\nexport const error = createSelector(moviesState, (state) => state.error);\r\n\r\nexport const genres = createSelector(allMovies, (movies) => {\r\n  const set = new Set();\r\n\r\n  for (const movie of movies) {\r\n    for (const genre of movie.genres) {\r\n      set.add(genre);\r\n    }\r\n  }\r\n  return [...set];\r\n});\r\n\r\nconst selectedMovieId = (state, movieId) => movieId;\r\n\r\nexport const selectedMovie =\r\n    createSelector(allMovies, selectedMovieId, (allMovies, selectedMovieId) => {\r\n      if (!selectedMovieId) return null;\r\n\r\n      return allMovies.find(movie => movie.id == selectedMovieId);\r\n    });\r\n\r\nexport const filterByGenre =\r\n    createSelector(moviesState, (state) => state.filterByGenre);\r\n\r\nexport const sortBy = createSelector(moviesState, (state) => state.sortBy);\r\n\r\nexport const filteredMovies = createSelector(\r\n    allMovies, filterByGenre, sortBy, (allMovies, filterByGenre, sortBy) => {\r\n      const sortPredicate = getSortPredicate(sortBy);\r\n\r\n      return (!filterByGenre ?\r\n                  allMovies :\r\n                  allMovies.filter(\r\n                      (movie) => movie.genres.includes(filterByGenre)))\r\n          .sort(sortPredicate)\r\n          .slice();\r\n    });\r\n\r\nfunction getSortPredicate(sortBy) {\r\n  if (sortBy === 'rating') {\r\n    return (a, b) => a.voteAverage - b.voteAverage;\r\n  }\r\n  if (sortBy === 'release date') {\r\n    return (a, b) => {\r\n      return new Date(a.releaseDate).getTime() -\r\n          new Date(b.releaseDate).getTime()\r\n    };\r\n  }\r\n  return (a, b) => a.genres[0].localeCompare(b.genres[0]);\r\n}"]},"metadata":{},"sourceType":"module"}