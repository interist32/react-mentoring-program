{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport './LinkTabs.scss';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../../utils/utils';\n\nvar LinkTabs = function LinkTabs(_ref) {\n  var tabs = _ref.tabs,\n      selectedText = _ref.selectedText,\n      _onSelect = _ref.onSelect;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"c-link-tabs\"\n  }, /*#__PURE__*/React.createElement(LinkTab, {\n    key: 'All',\n    text: 'All',\n    selected: selectedText === null,\n    onSelect: function onSelect() {\n      return _onSelect(null);\n    }\n  }), tabs.map(function (tab) {\n    return /*#__PURE__*/React.createElement(LinkTab, {\n      key: tab,\n      text: tab,\n      selected: tab === selectedText,\n      onSelect: _onSelect\n    });\n  }));\n};\n\nLinkTabs.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string),\n  onSelect: PropTypes.func.isRequired,\n  selectedText: PropTypes.string\n};\n\nvar LinkTab = function LinkTab(_ref2) {\n  var text = _ref2.text,\n      selected = _ref2.selected,\n      onSelect = _ref2.onSelect;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"c-link-tabs__item\"\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, classNames(\"c-link-tabs__link\", selected ? \"c-link-tabs__link--selected\" : ''), {\n    onClick: function onClick() {\n      return onSelect(text);\n    }\n  }), text));\n};\n\nLinkTab.propTypes = {\n  text: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.bool\n};\nexport default LinkTabs;","map":null,"metadata":{},"sourceType":"module"}