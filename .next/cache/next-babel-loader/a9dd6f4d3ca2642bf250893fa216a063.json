{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useState } from 'react';\nexport default function useModalState() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  return [isOpen, function () {\n    return setIsOpen(true);\n  }, function () {\n    return setIsOpen(false);\n  }];\n}","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/hooks/useModalState.js"],"names":["useState","useModalState","initialState","isOpen","setIsOpen"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAGA,eAAe,SAASC,aAAT,GAA6C;AAAA,MAAtBC,YAAsB,uEAAP,KAAO;;AAAA,kBAC9BF,QAAQ,CAACE,YAAD,CADsB;AAAA;AAAA,MACnDC,MADmD;AAAA,MAC3CC,SAD2C;;AAE1D,SAAO,CAACD,MAAD,EAAS;AAAA,WAAMC,SAAS,CAAC,IAAD,CAAf;AAAA,GAAT,EAAgC;AAAA,WAAMA,SAAS,CAAC,KAAD,CAAf;AAAA,GAAhC,CAAP;AACD","sourcesContent":["import {useState} from 'react';\r\n\r\n\r\nexport default function useModalState(initialState = false) {\r\n  const [isOpen, setIsOpen] = useState(initialState);\r\n  return [isOpen, () => setIsOpen(true), () => setIsOpen(false)];\r\n}"]},"metadata":{},"sourceType":"module"}