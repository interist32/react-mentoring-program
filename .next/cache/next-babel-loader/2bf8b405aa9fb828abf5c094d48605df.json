{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../../components/Modal/Modal';\nimport './editMovieModal.scss';\nimport * as moviesActions from '../../store/actions/movies';\nimport * as moviesSelectors from '../../store/selectors/movies';\nimport MovieForm from './MovieForm';\n\nvar EditMovieModal = function EditMovieModal(_ref) {\n  var movies = _ref.movies,\n      movieId = _ref.movieId,\n      onCloseClick = _ref.onCloseClick,\n      dispatchUpdateMovie = _ref.dispatchUpdateMovie;\n  var findMovie = useCallback(function (movieId) {\n    return movies.find(function (movie) {\n      return movie.id === movieId;\n    });\n  }, [movies, movieId]);\n\n  var handleSubmit = function handleSubmit(movie) {\n    dispatchUpdateMovie(movie);\n    onCloseClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onCloseClick: onCloseClick\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-edit-movie\"\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tp-header home-edit-movie__title\"\n  }, \"EDIT MOVIE\"), /*#__PURE__*/React.createElement(MovieForm, {\n    movie: findMovie(movieId),\n    onSubmit: handleSubmit\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: moviesSelectors.filteredMovies(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  dispatchUpdateMovie: moviesActions.updateMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMovieModal);","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/containers/Home/EditMovieModal.jsx"],"names":["React","useCallback","useState","connect","Modal","moviesActions","moviesSelectors","MovieForm","EditMovieModal","movies","movieId","onCloseClick","dispatchUpdateMovie","findMovie","find","movie","id","handleSubmit","mapStateToProps","state","filteredMovies","mapDispatchToProps","updateMovie"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,OAAO,uBAAP;AAEA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAKjB;AAAA,MAJFC,MAIE,QAJFA,MAIE;AAAA,MAHFC,OAGE,QAHFA,OAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,mBACE,QADFA,mBACE;AACF,MAAMC,SAAS,GAAGZ,WAAW,CAAC,UAACS,OAAD;AAAA,WAAaD,MAAM,CAACK,IAAP,CAAY,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,EAAN,KAAaN,OAAjB;AAAA,KAAjB,CAAb;AAAA,GAAD,EAA0D,CAACD,MAAD,EAASC,OAAT,CAA1D,CAA7B;;AAEA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAAW;AAC5BH,IAAAA,mBAAmB,CAACG,KAAD,CAAnB;AACAJ,IAAAA,YAAY;AACf,GAHD;;AAKA,sBACI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEA;AAArB,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAI,IAAA,SAAS,EAAC;AAAd,kBADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,SAAS,CAACH,OAAD,CAA3B;AAAsC,IAAA,QAAQ,EAAEO;AAAhD,IAFJ,CADJ,CADJ;AAQH,CArBD;;AAuBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHV,IAAAA,MAAM,EAAEH,eAAe,CAACc,cAAhB,CAA+BD,KAA/B;AADL,GAAP;AAGH,CAJD;;AAMA,IAAME,kBAAkB,GAAG;AACvBT,EAAAA,mBAAmB,EAAEP,aAAa,CAACiB;AADZ,CAA3B;AAIA,eAAenB,OAAO,CAClBe,eADkB,EAElBG,kBAFkB,CAAP,CAGbb,cAHa,CAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Modal from '../../components/Modal/Modal';\r\n\r\nimport './editMovieModal.scss';\r\n\r\nimport * as moviesActions from '../../store/actions/movies';\r\nimport * as moviesSelectors from '../../store/selectors/movies';\r\nimport MovieForm from './MovieForm';\r\n\r\n\r\nconst EditMovieModal = ({\r\n    movies,\r\n    movieId,\r\n    onCloseClick,\r\n    dispatchUpdateMovie,\r\n}) => {\r\n    const findMovie = useCallback((movieId) => movies.find(movie => movie.id === movieId), [movies, movieId]);\r\n\r\n    const handleSubmit = (movie) => {\r\n        dispatchUpdateMovie(movie);\r\n        onCloseClick();\r\n    };\r\n\r\n    return (\r\n        <Modal onCloseClick={onCloseClick}>\r\n            <div className=\"home-edit-movie\">\r\n                <h1 className=\"tp-header home-edit-movie__title\">EDIT MOVIE</h1>\r\n                <MovieForm movie={findMovie(movieId)} onSubmit={handleSubmit} />\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: moviesSelectors.filteredMovies(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchUpdateMovie: moviesActions.updateMovie,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EditMovieModal);"]},"metadata":{},"sourceType":"module"}