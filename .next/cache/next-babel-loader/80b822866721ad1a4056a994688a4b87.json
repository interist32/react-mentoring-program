{"ast":null,"code":"var camelcaseKeys = require('camelcase-keys');\n\nvar snakeize = require('snakeize');\n\nvar API_HOST = 'http://localhost:4000';\nvar MOVIES_URL = \"\".concat(API_HOST, \"/movies\");\nvar headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json;charset=UTF-8'\n};\nexport function getMovies(searchQuery) {\n  return fetch(searchQuery ? \"\".concat(MOVIES_URL, \"?search=\").concat(searchQuery, \"&searchBy=title\") : MOVIES_URL, {\n    method: 'GET',\n    headers: headers\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return camelcaseKeys(data, {\n      deep: true\n    });\n  }).then(function (data) {\n    return data.data;\n  });\n}\nexport function updateMovie(movie) {\n  return fetch(MOVIES_URL, {\n    method: 'PUT',\n    body: JSON.stringify(snakeize(movie)),\n    headers: headers\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return camelcaseKeys(data, {\n      deep: true\n    });\n  })[\"catch\"](function (error) {\n    return error;\n  });\n}\nexport function deleteMovie(movieId) {\n  return fetch(\"\".concat(MOVIES_URL, \"/\").concat(movieId), {\n    method: 'DELETE'\n  });\n}\nexport function addMovie(movie) {\n  return fetch(MOVIES_URL, {\n    method: 'POST',\n    body: JSON.stringify(snakeize(movie)),\n    headers: headers\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return camelcaseKeys(data, {\n      deep: true\n    });\n  });\n}","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/data/api.js"],"names":["camelcaseKeys","require","snakeize","API_HOST","MOVIES_URL","headers","getMovies","searchQuery","fetch","method","then","response","json","data","deep","updateMovie","movie","body","JSON","stringify","error","deleteMovie","movieId","addMovie"],"mappings":"AAAA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAME,QAAQ,GAAG,uBAAjB;AACA,IAAMC,UAAU,aAAMD,QAAN,YAAhB;AACA,IAAME,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAMA,OAAO,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AACrC,SAAOC,KAAK,CACDD,WAAW,aACJH,UADI,qBACiBG,WADjB,uBAEPH,UAHH,EAID;AACEK,IAAAA,MAAM,EAAE,KADV;AAEEJ,IAAAA,OAAO,EAAPA;AAFF,GAJC,CAAL,CAQFK,IARE,CAQG,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GARX,EASFF,IATE,CASG,UAAAG,IAAI;AAAA,WAAIb,aAAa,CAACa,IAAD,EAAO;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAP,CAAjB;AAAA,GATP,EAUFJ,IAVE,CAUG,UAAAG,IAAI;AAAA,WAAIA,IAAI,CAACA,IAAT;AAAA,GAVP,CAAP;AAWD;AAED,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AACjC,SAAOR,KAAK,CAACJ,UAAD,EAAa;AAChBK,IAAAA,MAAM,EAAE,KADQ;AAEhBQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,QAAQ,CAACc,KAAD,CAAvB,CAFU;AAGhBX,IAAAA,OAAO,EAAPA;AAHgB,GAAb,CAAL,CAKFK,IALE,CAKG,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GALH,EAMFF,IANE,CAMG,UAAAG,IAAI;AAAA,WAAIb,aAAa,CAACa,IAAD,EAAO;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAP,CAAjB;AAAA,GANP,WAOI,UAACM,KAAD,EAAW;AAChB,WAAOA,KAAP;AACD,GATE,CAAP;AAUD;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAOd,KAAK,WAAIJ,UAAJ,cAAkBkB,OAAlB,GAA6B;AACvCb,IAAAA,MAAM,EAAE;AAD+B,GAA7B,CAAZ;AAGD;AAED,OAAO,SAASc,QAAT,CAAkBP,KAAlB,EAAyB;AAC9B,SAAOR,KAAK,CAACJ,UAAD,EAAa;AAChBK,IAAAA,MAAM,EAAE,MADQ;AAEhBQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,QAAQ,CAACc,KAAD,CAAvB,CAFU;AAGhBX,IAAAA,OAAO,EAAPA;AAHgB,GAAb,CAAL,CAKFK,IALE,CAKG,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GALX,EAMFF,IANE,CAMG,UAAAG,IAAI;AAAA,WAAIb,aAAa,CAACa,IAAD,EAAO;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAP,CAAjB;AAAA,GANP,CAAP;AAOD","sourcesContent":["const camelcaseKeys = require('camelcase-keys');\r\nconst snakeize = require('snakeize')\r\n\r\nconst API_HOST = 'http://localhost:4000';\r\nconst MOVIES_URL = `${API_HOST}/movies`;\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Content-Type': 'application/json;charset=UTF-8'\r\n};\r\n\r\n\r\nexport function getMovies(searchQuery) {\r\n  return fetch(\r\n             searchQuery ?\r\n                 `${MOVIES_URL}?search=${searchQuery}&searchBy=title` :\r\n                 MOVIES_URL,\r\n             {\r\n               method: 'GET',\r\n               headers,\r\n             })\r\n      .then(response => response.json())\r\n      .then(data => camelcaseKeys(data, {deep: true}))\r\n      .then(data => data.data);\r\n}\r\n\r\nexport function updateMovie(movie) {\r\n  return fetch(MOVIES_URL, {\r\n           method: 'PUT',\r\n           body: JSON.stringify(snakeize(movie)),\r\n           headers,\r\n         })\r\n      .then((response) => response.json())\r\n      .then(data => camelcaseKeys(data, {deep: true}))\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return fetch(`${MOVIES_URL}/${movieId}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport function addMovie(movie) {\r\n  return fetch(MOVIES_URL, {\r\n           method: 'POST',\r\n           body: JSON.stringify(snakeize(movie)),\r\n           headers,\r\n         })\r\n      .then(response => response.json())\r\n      .then(data => camelcaseKeys(data, {deep: true}));\r\n}"]},"metadata":{},"sourceType":"module"}