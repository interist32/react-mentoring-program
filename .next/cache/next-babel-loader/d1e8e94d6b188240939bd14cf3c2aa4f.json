{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport { MovieBase } from './';\nexport var Movie = PropTypes.shape(_objectSpread(_objectSpread({}, MovieBase), {}, {\n  id: PropTypes.number.isRequired\n}));","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/propTypes/movie.js"],"names":["PropTypes","MovieBase","Movie","shape","id","number","isRequired"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SAAQC,SAAR,QAAwB,IAAxB;AAEA,OAAO,IAAMC,KAAK,GAAGF,SAAS,CAACG,KAAV,iCAChBF,SADgB;AAEnBG,EAAAA,EAAE,EAAEJ,SAAS,CAACK,MAAV,CAAiBC;AAFF,GAAd","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport {MovieBase} from './';\r\n\r\nexport const Movie = PropTypes.shape({\r\n  ...MovieBase,\r\n  id: PropTypes.number.isRequired,\r\n});"]},"metadata":{},"sourceType":"module"}