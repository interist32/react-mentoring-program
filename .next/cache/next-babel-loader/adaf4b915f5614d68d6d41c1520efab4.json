{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport { addMovie, editMovie, getMovies, removeMovie } from './sagas/movies';\nvar sagaMiddleware = createSagaMiddleware();\n\nvar configureStore = function configureStore() {\n  var store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(getMovies);\n  sagaMiddleware.run(addMovie);\n  sagaMiddleware.run(editMovie);\n  sagaMiddleware.run(removeMovie);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/projects/react-mentoring-program/src/store/configureStore.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","addMovie","editMovie","getMovies","removeMovie","sagaMiddleware","configureStore","store","run"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA0D,gBAA1D;AAGA,IAAMC,cAAc,GAAGN,oBAAoB,EAA3C;;AAEA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,KAAK,GAAGT,WAAW,CACrBE,WADqB,EAErBH,eAAe,CAACQ,cAAD,CAFM,CAAzB;AAKAA,EAAAA,cAAc,CAACG,GAAf,CAAmBL,SAAnB;AACAE,EAAAA,cAAc,CAACG,GAAf,CAAmBP,QAAnB;AACAI,EAAAA,cAAc,CAACG,GAAf,CAAmBN,SAAnB;AACAG,EAAAA,cAAc,CAACG,GAAf,CAAmBJ,WAAnB;AAEA,SAAOG,KAAP;AACD,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import {applyMiddleware, createStore} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport {addMovie, editMovie, getMovies, removeMovie} from './sagas/movies';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n      rootReducer,\r\n      applyMiddleware(sagaMiddleware),\r\n  );\r\n\r\n  sagaMiddleware.run(getMovies);\r\n  sagaMiddleware.run(addMovie);\r\n  sagaMiddleware.run(editMovie);\r\n  sagaMiddleware.run(removeMovie);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}